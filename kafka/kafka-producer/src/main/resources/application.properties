#spring.mvc.templates.view.prefix=/WEB-INF/
#spring.mvc.view.suffix=.html
server.port=9100

spring.thymeleaf.cache=false
spring.thymeleaf.mode = HTML5


#spring.application.name=spirng-boot-rabbitmq

#spring.rabbitmq.host=10.0.20.6
#spring.rabbitmq.port=5672
#该用户要设置好权限 rabbitmqctl set_permissions -p / root .* .* .*
#spring.rabbitmq.username=root
#spring.rabbitmq.password=123456


#============== kafka ===================
# 指定kafka 代理地址，可以多个
spring.kafka.bootstrap-servers=localhost:9092

#=============== provider  =======================
spring.kafka.producer.retries=0
# 每次批量发送消息的数量
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432

# 指定消息key和消息体的编解码方式
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

#=============== consumer  =======================
# 指定默认消费者group id
spring.kafka.consumer.group-id=user-log-group

spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=100

# 指定消息key和消息体的编解码方式
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer